{"version":3,"sources":["algorithms.js","ThreeApp.js","mobileCheck.js","App.js","index.js"],"names":["random_rotations_avro","nums","tau","tf","Math","PI","x1","x2","x3","R","mul","v","add","identity","v_aux","expandDims","H","sub","AxesFromRotation","props","T","THREE","rot_mat","set","pos","quat","scale","decompose","react_default","a","createElement","args","size","position","x","y","z","quaternion","w","BatchAxesFromRotations","rot_mats","res","i","push","key","slice","Fragment","WireSphere","opacity","check","navigator","userAgent","vendor","window","opera","test","substr","detectMobile","depthTest","wireframe","transparent","color","MainCanvas","react_three_fiber_esm","attach","OrbitControls","fov","near","far","aspect","innerWidth","innerHeight","lookAt","dataSync","num_rots","AVRO","SPIRAL","defaultMethod","defaultAvro","defaultSpiral","num_sphere_pts","num_xy_rots","AvroSettings","_useState","useState","_useState2","Object","slicedToArray","val","setVal","htmlFor","type","id","value","onChange","e","target","onClick","onSettingChange","parseInt","SpiralSettings","_useState3","_useState4","sphereVal","setSphereVal","_useState5","_useState6","xyVal","setXyVal","DetailedSettings","method","Selections","_useState7","_useState8","setMethod","style","backgroundColor","top","new_method","Reference","bottom","href","App","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inherits","createClass","settings","setState","normalize","pts","div","cross","b","_tf$split","_tf$split2","a1","a2","a3","_tf$split3","_tf$split4","b1","b2","b3","c1","c2","c3","epsilon","n","theta","phi","z_vecs","y_vecs","x_vecs","Rz","rads","Rxy","tile","reshape","matMul","grid_rotations_spiral","width","height","ThreeApp","bind","React","Component","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"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","file":"static/js/main.3e82e235.chunk.js","sourcesContent":["import * as tf from '@tensorflow/tfjs'\n\n/** Signature of Algorithms\n *Returns: nums of Matrix3\n **/\n\nfunction random_rotations_avro(nums) {\n    let tau = tf.scalar(2 * Math.PI);\n    let x1 = tf.randomUniform([nums], 0, 1);\n    let x2 = tf.randomUniform([nums], 0, 1);\n    let x3 = tf.randomUniform([nums], 0, 1);\n    let R = tf.stack(\n        [\n            tf.stack([tf.cos(tf.mul(tau, x1)), tf.sin(tf.mul(tau, x1)), tf.zeros([nums])], 1),\n            tf.stack([tf.sin(tf.mul(tau, x1).mul(-1)), tf.cos(tf.mul(tau, x1)), tf.zeros([nums])], 1),\n            tf.stack([tf.zeros([nums]), tf.zeros([nums]), tf.ones([nums])], 1),\n        ], 1);\n    let v = tf.stack(\n        [\n            tf.cos(x2.mul(tau)).mul(tf.sqrt(x3)),\n            tf.sin(x2.mul(tau)).mul(tf.sqrt(x3)),\n            tf.sqrt(x3.mul(-1).add(1)),\n        ], 1)\n    let identity = tf.eye(3, 3, [nums]);\n    let v_aux = v.expandDims(2).mul(2).mul(v.expandDims(1));\n    let H = identity.sub(v_aux);\n    let rot_mats = tf.matMul(H, R).mul(-1);\n    return rot_mats;\n}\n\nfunction grid_rotations_spiral(num_sphere_pts, num_xy_rots) {\n    function normalize(pts) {\n        return pts.div(tf.norm(pts, 2, 1, true));\n    }\n    function cross(a, b) {\n        let [a1, a2, a3] = tf.split(a, 3, 1);\n        let [b1, b2, b3] = tf.split(b, 3, 1);\n        let c1 = a2.mul(b3).sub(a3.mul(b2));\n        let c2 = a3.mul(b1).sub(a1.mul(b3));\n        let c3 = a1.mul(b2).sub(a2.mul(b1));\n        return tf.concat([c1, c2, c3], 1);\n    }\n\tlet epsilon;\n    let n = num_sphere_pts;\n    if (n >= 600000) {\n        epsilon = 214;\n    } else if (n>= 400000) {\n        epsilon = 75;\n    } else if (n>= 11000) {\n        epsilon = 27;\n    } else if (n>= 890) {\n        epsilon = 10;\n    } else if (n>= 177) {\n        epsilon = 3.33;\n    } else if (n>= 24) {\n        epsilon = 1.33;\n    } else {\n        epsilon = 0.33;\n    }\n\n    const goldenRatio = 1.618033988749895; // (1 + 5**0.5)/2;\n    const i = tf.range(0, n);\n    const theta = i.mul(2 * Math.PI / goldenRatio);\n    const phi = tf.acos( i.add(epsilon).mul(-2/(n-1+2*epsilon)).add(1) );\n    const x = tf.cos(theta).mul(tf.sin(phi));\n    const y = tf.sin(theta).mul(tf.sin(phi));\n    const z = tf.cos(phi);\n    const z_vecs = tf.stack([x, y, z], 1)\n\n    const up_vecs = tf.stack([tf.zeros([n]), tf.ones([n]), tf.zeros([n])], 1);\n    const y_vecs = normalize( cross(z_vecs, up_vecs) );\n    const x_vecs = normalize( cross(y_vecs, z_vecs) );\n    let Rz = tf.stack([x_vecs, y_vecs, z_vecs], 2)  // (num_sphere_pts, 3, 3)\n\n    const rads = tf.range(0, num_xy_rots).mul(2*Math.PI/num_xy_rots);\n    let Rxy = tf.stack([\n        tf.stack([tf.cos(rads), tf.sin(rads), tf.zeros([num_xy_rots])], 1),\n        tf.stack([tf.sin(rads).mul(-1), tf.cos(rads), tf.zeros([num_xy_rots])], 1),\n        tf.stack([tf.zeros([num_xy_rots]), tf.zeros([num_xy_rots]), tf.ones([num_xy_rots])], 1),\n    ], 1)\n\n    let num_rots = num_sphere_pts * num_xy_rots;\n    Rxy = Rxy.expandDims(1).tile([1, num_sphere_pts, 1, 1]).reshape([num_rots, 3, 3])\n    Rz = Rz.expandDims(0).tile([num_xy_rots, 1, 1, 1]).reshape([num_rots, 3, 3])\n    const rot_mats = Rz.matMul(Rxy);  // First rotate x-y coord (local), then Rz\n    return rot_mats;\n}\n// grid_rotations_spiral(2, 2).print();\n\nexport {grid_rotations_spiral, random_rotations_avro};","import React, { useRef } from 'react';\nimport { detectMobile } from './mobileCheck';\nimport * as THREE from 'three'\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport { OrbitControls } from '@react-three/drei'\n\n\n// Args: {rot_mat: Array of 9, size: number}\nfunction AxesFromRotation(props) {\n  /* Tranform = [R | -z] */\n  const T = new THREE.Matrix4();\n  const rot_mat = props.rot_mat;\n  T.set(\n    rot_mat[0], rot_mat[1], rot_mat[2], - rot_mat[2],\n    rot_mat[3], rot_mat[4], rot_mat[5], - rot_mat[5],\n    rot_mat[6], rot_mat[7], rot_mat[8], - rot_mat[8],\n    0, 0, 0, 1\n  );\n  /* Has to do decompose() in R3F */\n  let pos = new THREE.Vector3();\n  let quat = new THREE.Quaternion();\n  let scale = new THREE.Vector3();\n  T.decompose(pos, quat, scale);\n  return <axesHelper args={[props.size]}\n    position={[pos.x, pos.y, pos.z]}\n    quaternion={[quat.x, quat.y, quat.z, quat.w]} />\n}\n\n// Args: {rot_mats: Array of Nx9, nums: int, size: number }\n// Output: Array of N AxesHelpers\nfunction BatchAxesFromRotations(props) {\n  const rot_mats = props.rot_mats;\n  const size = props.size;\n  const nums = props.nums;\n  let res = [];\n  for (let i = 0; i < nums; ++i) {\n    res.push(\n      <AxesFromRotation key={i} rot_mat={rot_mats.slice(9*i, 9*i+9)} size={size}/>\n      );\n  }\n  return <>{res}</>;\n}\n\nfunction WireSphere() {\n  const opacity = detectMobile() ? 0.2 : 0.01;\n  return <mesh position={[0, 0, 0]}>\n    <sphereGeometry args={[1, 32, 16]} />\n    <meshStandardMaterial depthTest={false} wireframe={true} transparent={true}\n      color={0xffffff} opacity={opacity}/>\n  </mesh>\n}\n\nfunction MainCanvas(props) {\n  return (\n    <Canvas>\n      <color args={[0x000000]} attach=\"background\" />\n      <ambientLight />\n\n      <OrbitControls />\n      <perspectiveCamera\n        fov={75} near={0.1} far={1000} aspect={window.innerWidth / window.innerHeight}\n        position={[5, 0, 0]} lookAt={[0, 0, 0]}/>\n\n      <WireSphere />\n      <BatchAxesFromRotations rot_mats={props.rot_mats.dataSync()} nums={props.num_rots} size={0.05}/>\n    </Canvas>\n  );\n}\n\nexport default MainCanvas;\n\n// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\n\n// extend({ OrbitControls })\n\n// const extent = 10\n\n// // generate nice figure with lots of points\n// const y_period = 17\n// const x_period = 13\n// const res = 0.001\n\n// const CameraControls = () => {\n//   const {\n//     camera,\n//     gl: { domElement }\n//   } = useThree()\n//   // Ref to the controls, so that we can update them on every frame using useFrame\n//   const controls = useRef(null)\n//   // useFrame((state) => controls.current.update())\n//   // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n//   // @ts-ignore\n//   return <orbitControls ref={controls} args={[camera, domElement]} />\n// }","export function detectMobile() {\n    let check = false;\n    (function (a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor || window.opera);\n    return check;\n};","import './App.css';\nimport React from 'react';\nimport { useState } from 'react';\nimport {random_rotations_avro, grid_rotations_spiral} from './algorithms'\nimport MainCanvas from './ThreeApp'\n\nconst AVRO = 'avro', SPIRAL = 'spiral';\nconst defaultMethod = AVRO;\nconst defaultAvro = { num_rots: 100 };\nconst defaultSpiral = { num_sphere_pts: 100, num_xy_rots: 3 }\n\nfunction AvroSettings(props) {\n  const [val, setVal] = useState(defaultAvro.num_rots);\n  const onClick = () => {\n    props.onSettingChange(AVRO, { num_rots: parseInt(val) });\n  }\n  return <>\n    <label htmlFor='num_rots'>Number of Rotations:</label>\n    <input type='text' id='num_rots' value={val}\n      onChange={(e) => setVal(e.target.value)}></input>\n    <button onClick={onClick}>Refresh</button>\n  </>\n}\n\nfunction SpiralSettings(props) {\n  const [sphereVal, setSphereVal] = useState(defaultSpiral.num_sphere_pts);\n  const [xyVal, setXyVal] = useState(defaultSpiral.num_xy_rots);\n  const onClick = () => {\n    props.onSettingChange(SPIRAL,\n      { num_sphere_pts: parseInt(sphereVal), num_xy_rots: parseInt(xyVal) });\n  }\n  return <>\n    <div>\n      <label htmlFor='num_sphere_pts'>Number of Sphere Points:</label>\n      <input type='text' id='num_sphere_pts' value={sphereVal}\n        onChange={(e) => setSphereVal(e.target.value)}></input>\n    </div>\n    <div>\n      <label htmlFor='num_xy_pts'>Number of XY Rotations:</label>\n      <input type='text' id='num_xy_rots' value={xyVal}\n        onChange={(e) => setXyVal(e.target.value)}></input>\n      <button onClick={onClick}>Refresh</button>\n    </div>\n  </>\n}\n\nfunction DetailedSettings(props) {\n  if (props.method === AVRO) {\n    return <AvroSettings onSettingChange={props.onSettingChange} />\n  } else if (props.method === SPIRAL) {\n    return <SpiralSettings onSettingChange={props.onSettingChange} />\n  }\n}\n\nfunction Selections(props) {\n  const [method, setMethod] = useState(defaultMethod);\n  const onChange = (e) => {\n    const new_method = e.target.value;\n    setMethod(new_method)\n    if (new_method === AVRO) { props.onSettingChange(new_method, defaultAvro); }\n    else if (new_method === SPIRAL) { props.onSettingChange(new_method, defaultSpiral); }\n  };\n  return <div style={{ color: 'white', backgroundColor: 'transparent', position: 'absolute', top: '0px' }}>\n    <div>\n      <label htmlFor=\"method-select\">Generation Method:</label>\n      <select id=\"method-select\" onChange={onChange}>\n        <option value={AVRO}>Random-Avro</option>\n        <option value={SPIRAL}>Spiral</option>\n      </select>\n    </div>\n    <DetailedSettings method={method} onSettingChange={props.onSettingChange}/>\n  </div>\n}\n\nfunction Reference() {\n  return <div style={{ color: 'white', backgroundColor: 'transparent', position: 'absolute', bottom: '0px' }}>\n    <p>Reference:</p>\n    <ol>\n      <li>J Avro. \"Fast Random Rotation Matrices.\" (1992)</li>\n      <li><a href=\"https://gist.github.com/zhifanzhu/a1d2a108ad6ea81b853a67d2420b01be\">Spiral method.</a></li>\n    </ol>\n  </div>\n}\n\nclass App extends React.Component {\n  state = {\n    rot_mats: random_rotations_avro(defaultAvro.num_rots),\n    num_rots: defaultAvro.num_rots,\n  }\n  onSettingChange(method, settings) {\n    if (method === AVRO) {\n      const rot_mats = random_rotations_avro(settings.num_rots);\n      this.setState({num_rots: settings.num_rots});\n      this.setState({rot_mats: rot_mats});\n    } else if (method === SPIRAL) {\n      const rot_mats = grid_rotations_spiral(\n        settings.num_sphere_pts, settings.num_xy_rots);\n      this.setState({num_rots: settings.num_sphere_pts * settings.num_xy_rots});\n      this.setState({rot_mats: rot_mats});\n    }\n  }\n  render() {\n    return <div style={{ width: window.innerWidth, height: window.innerHeight }}>\n      <MainCanvas rot_mats={this.state.rot_mats} num_rots={this.state.num_rots} />\n      <Selections onSettingChange={this.onSettingChange.bind(this)}/>\n      <Reference />\n    </div>\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}